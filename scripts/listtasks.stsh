#!env stsh

scheme TodoJSON : MPWJSONConverterStore {

    -entityName { self converterClass className lowercaseString. }
    -mapReference:aReference {
        refPath ← aReference path.
        self referenceForPath:"{this:entityName}-{refPath}.json".
    }
}.

class ToDoBase {
       var id.
       var title.
}

class Task : ToDoBase { 
       var completed_at.
       -description { "<Task: title: {this:title} id: {this:id} done: {this:done}>". }
       -<boolean>done { this:completed_at length isNotNil. }
}.
class List : ToDoBase { 
       -description { "<List: title: {this:title} id: {this:id}". }
       -tasksRef { ref:tasks:{this:id}  }
}.


dir ← ref:file:/Users/marcel/Library/TaskLists/ asScheme. 
json1 ← #TodoJSON{ #converterClass: Task }
scheme:tasks ← json1 → dir.


json2 ← #TodoJSON{ #converterClass: List }
scheme:lists ← json2 → dir.


lists:2 do: { :list | 
      stdout println: '---------'.
      stdout println: ''.
      stdout println: list title.
      stdout println: ''.
      tasks ← list tasksRef value.
      tasks do: { :task | 
          stdout println: task description.
      }.
}.
